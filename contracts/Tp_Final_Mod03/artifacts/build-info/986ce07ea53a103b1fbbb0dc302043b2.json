{
	"id": "986ce07ea53a103b1fbbb0dc302043b2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Tp_Final_Mod03/SimpleDEX.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >= 0.8.2 < 0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract SimpleDEX is Ownable(msg.sender) {\r\n    IERC20 public tokenA;\r\n    IERC20 public tokenB;\r\n\r\n    mapping(address token => uint256) public pool;\r\n\r\n    constructor(address _tokenA, address _tokenB) {\r\n        tokenA = IERC20(_tokenA);\r\n        tokenB = IERC20(_tokenB);\r\n        \r\n        emit LiquidityAdded(owner(), tokenA.balanceOf(address(tokenA)), tokenB.balanceOf(address(tokenB)));\r\n    }\r\n\r\n    event LiquidityAdded(address indexed provider, uint256 amountA, uint256 amountB);\r\n    event LiquidityRemoved(address indexed provider, uint256 amountA, uint256 amountB);\r\n    event Swapped(address indexed trader, address indexed tokenIn, uint256 amountIn, address indexed tokenOut, uint256 amountOut);\r\n\r\n\r\n    function addLiquidity(uint256 amountA, uint256 amountB) public onlyOwner {\r\n    }\r\n\r\n    // swapAforB(uint256 amountAIn)\r\n    // swapBforA(uint256 amountBIn)\r\n    // removeLiquidity(uint256 amountA, uint256 amountB)\r\n    // getPrice(address _token)\r\n  \r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Tp_Final_Mod03/SimpleDEX.sol": {
				"SimpleDEX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenB",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "trader",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "Swapped",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "pool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":190:1167  contract SimpleDEX is Ownable(msg.sender) {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":349:592  constructor(address _tokenA, address _tokenB) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":220:230  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":422:429  _tokenA */\n  dup2\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":406:412  tokenA */\n  0x01\n  0x00\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":406:430  tokenA = IERC20(_tokenA) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":457:464  _tokenB */\n  dup1\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":441:447  tokenB */\n  0x02\n  0x00\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":441:465  tokenB = IERC20(_tokenB) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":506:513  owner() */\n  tag_13\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":506:511  owner */\n  shl(0x20, tag_14)\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":506:513  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":491:584  LiquidityAdded(owner(), tokenA.balanceOf(address(tokenA)), tokenB.balanceOf(address(tokenB))) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":515:521  tokenA */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":515:531  tokenA.balanceOf */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x70a08231\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":540:546  tokenA */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":515:548  tokenA.balanceOf(address(tokenA)) */\n  mload(0x40)\n  dup3\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_15:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_17\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_17:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":550:556  tokenB */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":550:566  tokenB.balanceOf */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x70a08231\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":575:581  tokenB */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":550:583  tokenB.balanceOf(address(tokenB)) */\n  mload(0x40)\n  dup3\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_20:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_22\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_22:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_23\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_23:\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":491:584  LiquidityAdded(owner(), tokenA.balanceOf(address(tokenA)), tokenB.balanceOf(address(tokenB))) */\n  mload(0x40)\n  tag_24\n  swap3\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":349:592  constructor(address _tokenA, address _tokenB) {... */\n  pop\n  pop\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":190:1167  contract SimpleDEX is Ownable(msg.sender) {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_30:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_32:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_33:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_47\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_32\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_34:\n    /* \"#utility.yul\":641:665   */\n  tag_49\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_33\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_50:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_35:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_52\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_34\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_55\n  tag_30\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":949:1068   */\ntag_54:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_56\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_35\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_57\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_35\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_36:\n    /* \"#utility.yul\":1445:1469   */\n  tag_59\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_33\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_61\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_36\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1710:1787   */\ntag_37:\n    /* \"#utility.yul\":1747:1754   */\n  0x00\n    /* \"#utility.yul\":1776:1781   */\n  dup2\n    /* \"#utility.yul\":1765:1781   */\n  swap1\n  pop\n    /* \"#utility.yul\":1710:1787   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1793:1915   */\ntag_38:\n    /* \"#utility.yul\":1866:1890   */\n  tag_64\n    /* \"#utility.yul\":1884:1889   */\n  dup2\n    /* \"#utility.yul\":1866:1890   */\n  tag_37\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1859:1864   */\n  dup2\n    /* \"#utility.yul\":1856:1891   */\n  eq\n    /* \"#utility.yul\":1846:1909   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1902:1903   */\n  dup1\n    /* \"#utility.yul\":1895:1907   */\n  revert\n    /* \"#utility.yul\":1846:1909   */\ntag_65:\n    /* \"#utility.yul\":1793:1915   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1921:2064   */\ntag_39:\n    /* \"#utility.yul\":1978:1983   */\n  0x00\n    /* \"#utility.yul\":2009:2015   */\n  dup2\n    /* \"#utility.yul\":2003:2016   */\n  mload\n    /* \"#utility.yul\":1994:2016   */\n  swap1\n  pop\n    /* \"#utility.yul\":2025:2058   */\n  tag_67\n    /* \"#utility.yul\":2052:2057   */\n  dup2\n    /* \"#utility.yul\":2025:2058   */\n  tag_38\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1921:2064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2070:2421   */\ntag_19:\n    /* \"#utility.yul\":2140:2146   */\n  0x00\n    /* \"#utility.yul\":2189:2191   */\n  0x20\n    /* \"#utility.yul\":2177:2186   */\n  dup3\n    /* \"#utility.yul\":2168:2175   */\n  dup5\n    /* \"#utility.yul\":2164:2187   */\n  sub\n    /* \"#utility.yul\":2160:2192   */\n  slt\n    /* \"#utility.yul\":2157:2276   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2195:2274   */\n  tag_70\n  tag_30\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2157:2276   */\ntag_69:\n    /* \"#utility.yul\":2315:2316   */\n  0x00\n    /* \"#utility.yul\":2340:2404   */\n  tag_71\n    /* \"#utility.yul\":2396:2403   */\n  dup5\n    /* \"#utility.yul\":2387:2393   */\n  dup3\n    /* \"#utility.yul\":2376:2385   */\n  dup6\n    /* \"#utility.yul\":2372:2394   */\n  add\n    /* \"#utility.yul\":2340:2404   */\n  tag_39\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2330:2404   */\n  swap2\n  pop\n    /* \"#utility.yul\":2286:2414   */\n  pop\n    /* \"#utility.yul\":2070:2421   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2427:2545   */\ntag_40:\n    /* \"#utility.yul\":2514:2538   */\n  tag_73\n    /* \"#utility.yul\":2532:2537   */\n  dup2\n    /* \"#utility.yul\":2514:2538   */\n  tag_37\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2509:2512   */\n  dup3\n    /* \"#utility.yul\":2502:2539   */\n  mstore\n    /* \"#utility.yul\":2427:2545   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2551:2883   */\ntag_25:\n    /* \"#utility.yul\":2672:2676   */\n  0x00\n    /* \"#utility.yul\":2710:2712   */\n  0x40\n    /* \"#utility.yul\":2699:2708   */\n  dup3\n    /* \"#utility.yul\":2695:2713   */\n  add\n    /* \"#utility.yul\":2687:2713   */\n  swap1\n  pop\n    /* \"#utility.yul\":2723:2794   */\n  tag_75\n    /* \"#utility.yul\":2791:2792   */\n  0x00\n    /* \"#utility.yul\":2780:2789   */\n  dup4\n    /* \"#utility.yul\":2776:2793   */\n  add\n    /* \"#utility.yul\":2767:2773   */\n  dup6\n    /* \"#utility.yul\":2723:2794   */\n  tag_40\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2804:2876   */\n  tag_76\n    /* \"#utility.yul\":2872:2874   */\n  0x20\n    /* \"#utility.yul\":2861:2870   */\n  dup4\n    /* \"#utility.yul\":2857:2875   */\n  add\n    /* \"#utility.yul\":2848:2854   */\n  dup5\n    /* \"#utility.yul\":2804:2876   */\n  tag_40\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2551:2883   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":190:1167  contract SimpleDEX is Ownable(msg.sender) {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":190:1167  contract SimpleDEX is Ownable(msg.sender) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x0fc63d10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x156522a8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5f64b55b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":239:259  IERC20 public tokenA */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":295:340  mapping(address token => uint256) public pool */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":266:286  IERC20 public tokenB */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":912:993  function addLiquidity(uint256 amountA, uint256 amountB) public onlyOwner {... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":239:259  IERC20 public tokenA */\n    tag_12:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":295:340  mapping(address token => uint256) public pool */\n    tag_18:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":266:286  IERC20 public tokenB */\n    tag_22:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":912:993  function addLiquidity(uint256 amountA, uint256 amountB) public onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_45:\n        /* \"contracts/Tp_Final_Mod03/SimpleDEX.sol\":912:993  function addLiquidity(uint256 amountA, uint256 amountB) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_50\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_27\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_57\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_62:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_63:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_64:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_83\n        /* \"#utility.yul\":306:340   */\n      tag_84\n        /* \"#utility.yul\":315:339   */\n      tag_85\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_62\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":306:340   */\n      tag_63\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":288:341   */\n      tag_62\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_65:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_87\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_64\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_66:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_89\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_65\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_67:\n        /* \"#utility.yul\":732:783   */\n      tag_91\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_66\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_14:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_93\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_67\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1133:1250   */\n    tag_69:\n        /* \"#utility.yul\":1242:1243   */\n      0x00\n        /* \"#utility.yul\":1239:1240   */\n      dup1\n        /* \"#utility.yul\":1232:1244   */\n      revert\n        /* \"#utility.yul\":1379:1475   */\n    tag_71:\n        /* \"#utility.yul\":1416:1423   */\n      0x00\n        /* \"#utility.yul\":1445:1469   */\n      tag_98\n        /* \"#utility.yul\":1463:1468   */\n      dup3\n        /* \"#utility.yul\":1445:1469   */\n      tag_62\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1434:1469   */\n      swap1\n      pop\n        /* \"#utility.yul\":1379:1475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1481:1603   */\n    tag_72:\n        /* \"#utility.yul\":1554:1578   */\n      tag_100\n        /* \"#utility.yul\":1572:1577   */\n      dup2\n        /* \"#utility.yul\":1554:1578   */\n      tag_71\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1547:1552   */\n      dup2\n        /* \"#utility.yul\":1544:1579   */\n      eq\n        /* \"#utility.yul\":1534:1597   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":1593:1594   */\n      0x00\n        /* \"#utility.yul\":1590:1591   */\n      dup1\n        /* \"#utility.yul\":1583:1595   */\n      revert\n        /* \"#utility.yul\":1534:1597   */\n    tag_101:\n        /* \"#utility.yul\":1481:1603   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1609:1748   */\n    tag_73:\n        /* \"#utility.yul\":1655:1660   */\n      0x00\n        /* \"#utility.yul\":1693:1699   */\n      dup2\n        /* \"#utility.yul\":1680:1700   */\n      calldataload\n        /* \"#utility.yul\":1671:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1709:1742   */\n      tag_103\n        /* \"#utility.yul\":1736:1741   */\n      dup2\n        /* \"#utility.yul\":1709:1742   */\n      tag_72\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1609:1748   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1754:2083   */\n    tag_17:\n        /* \"#utility.yul\":1813:1819   */\n      0x00\n        /* \"#utility.yul\":1862:1864   */\n      0x20\n        /* \"#utility.yul\":1850:1859   */\n      dup3\n        /* \"#utility.yul\":1841:1848   */\n      dup5\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_106\n      tag_69\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1830:1949   */\n    tag_105:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_107\n        /* \"#utility.yul\":2058:2065   */\n      dup5\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup6\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_73\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2003:2066   */\n      swap2\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":1754:2083   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2089:2166   */\n    tag_74:\n        /* \"#utility.yul\":2126:2133   */\n      0x00\n        /* \"#utility.yul\":2155:2160   */\n      dup2\n        /* \"#utility.yul\":2144:2160   */\n      swap1\n      pop\n        /* \"#utility.yul\":2089:2166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2172:2290   */\n    tag_75:\n        /* \"#utility.yul\":2259:2283   */\n      tag_110\n        /* \"#utility.yul\":2277:2282   */\n      dup2\n        /* \"#utility.yul\":2259:2283   */\n      tag_74\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2254:2257   */\n      dup3\n        /* \"#utility.yul\":2247:2284   */\n      mstore\n        /* \"#utility.yul\":2172:2290   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2296:2518   */\n    tag_20:\n        /* \"#utility.yul\":2389:2393   */\n      0x00\n        /* \"#utility.yul\":2427:2429   */\n      0x20\n        /* \"#utility.yul\":2416:2425   */\n      dup3\n        /* \"#utility.yul\":2412:2430   */\n      add\n        /* \"#utility.yul\":2404:2430   */\n      swap1\n      pop\n        /* \"#utility.yul\":2440:2511   */\n      tag_112\n        /* \"#utility.yul\":2508:2509   */\n      0x00\n        /* \"#utility.yul\":2497:2506   */\n      dup4\n        /* \"#utility.yul\":2493:2510   */\n      add\n        /* \"#utility.yul\":2484:2490   */\n      dup5\n        /* \"#utility.yul\":2440:2511   */\n      tag_75\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2296:2518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2642   */\n    tag_76:\n        /* \"#utility.yul\":2611:2635   */\n      tag_114\n        /* \"#utility.yul\":2629:2634   */\n      dup2\n        /* \"#utility.yul\":2611:2635   */\n      tag_71\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2606:2609   */\n      dup3\n        /* \"#utility.yul\":2599:2636   */\n      mstore\n        /* \"#utility.yul\":2524:2642   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2648:2870   */\n    tag_29:\n        /* \"#utility.yul\":2741:2745   */\n      0x00\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2768:2777   */\n      dup3\n        /* \"#utility.yul\":2764:2782   */\n      add\n        /* \"#utility.yul\":2756:2782   */\n      swap1\n      pop\n        /* \"#utility.yul\":2792:2863   */\n      tag_116\n        /* \"#utility.yul\":2860:2861   */\n      0x00\n        /* \"#utility.yul\":2849:2858   */\n      dup4\n        /* \"#utility.yul\":2845:2862   */\n      add\n        /* \"#utility.yul\":2836:2842   */\n      dup5\n        /* \"#utility.yul\":2792:2863   */\n      tag_76\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2648:2870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:2998   */\n    tag_77:\n        /* \"#utility.yul\":2949:2973   */\n      tag_118\n        /* \"#utility.yul\":2967:2972   */\n      dup2\n        /* \"#utility.yul\":2949:2973   */\n      tag_74\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2942:2947   */\n      dup2\n        /* \"#utility.yul\":2939:2974   */\n      eq\n        /* \"#utility.yul\":2929:2992   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":2985:2986   */\n      dup1\n        /* \"#utility.yul\":2978:2990   */\n      revert\n        /* \"#utility.yul\":2929:2992   */\n    tag_119:\n        /* \"#utility.yul\":2876:2998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3004:3143   */\n    tag_78:\n        /* \"#utility.yul\":3050:3055   */\n      0x00\n        /* \"#utility.yul\":3088:3094   */\n      dup2\n        /* \"#utility.yul\":3075:3095   */\n      calldataload\n        /* \"#utility.yul\":3066:3095   */\n      swap1\n      pop\n        /* \"#utility.yul\":3104:3137   */\n      tag_121\n        /* \"#utility.yul\":3131:3136   */\n      dup2\n        /* \"#utility.yul\":3104:3137   */\n      tag_77\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3004:3143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3623   */\n    tag_32:\n        /* \"#utility.yul\":3217:3223   */\n      0x00\n        /* \"#utility.yul\":3225:3231   */\n      dup1\n        /* \"#utility.yul\":3274:3276   */\n      0x40\n        /* \"#utility.yul\":3262:3271   */\n      dup4\n        /* \"#utility.yul\":3253:3260   */\n      dup6\n        /* \"#utility.yul\":3249:3272   */\n      sub\n        /* \"#utility.yul\":3245:3277   */\n      slt\n        /* \"#utility.yul\":3242:3361   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":3280:3359   */\n      tag_124\n      tag_69\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3242:3361   */\n    tag_123:\n        /* \"#utility.yul\":3400:3401   */\n      0x00\n        /* \"#utility.yul\":3425:3478   */\n      tag_125\n        /* \"#utility.yul\":3470:3477   */\n      dup6\n        /* \"#utility.yul\":3461:3467   */\n      dup3\n        /* \"#utility.yul\":3450:3459   */\n      dup7\n        /* \"#utility.yul\":3446:3468   */\n      add\n        /* \"#utility.yul\":3425:3478   */\n      tag_78\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3415:3478   */\n      swap3\n      pop\n        /* \"#utility.yul\":3371:3488   */\n      pop\n        /* \"#utility.yul\":3527:3529   */\n      0x20\n        /* \"#utility.yul\":3553:3606   */\n      tag_126\n        /* \"#utility.yul\":3598:3605   */\n      dup6\n        /* \"#utility.yul\":3589:3595   */\n      dup3\n        /* \"#utility.yul\":3578:3587   */\n      dup7\n        /* \"#utility.yul\":3574:3596   */\n      add\n        /* \"#utility.yul\":3553:3606   */\n      tag_78\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3543:3606   */\n      swap2\n      pop\n        /* \"#utility.yul\":3498:3616   */\n      pop\n        /* \"#utility.yul\":3149:3623   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f6499b82ed7d1f2c320e4d47019607ed64cf25015b98dc18c5c0a3e656940ade64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_312": {
									"entryPoint": null,
									"id": 312,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 776,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 969,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1313,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2886:4",
										"nodeType": "YulBlock",
										"src": "0:2886:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "939:413:4",
													"nodeType": "YulBlock",
													"src": "939:413:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:4",
																"nodeType": "YulBlock",
																"src": "985:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:4"
																			},
																			"nativeSrc": "987:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:4"
																		},
																		"nativeSrc": "987:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:4"
																		},
																		"nativeSrc": "956:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:4",
																		"nodeType": "YulLiteral",
																		"src": "981:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:4"
																},
																"nativeSrc": "952:32:4",
																"nodeType": "YulFunctionCall",
																"src": "952:32:4"
															},
															"nativeSrc": "949:119:4",
															"nodeType": "YulIf",
															"src": "949:119:4"
														},
														{
															"nativeSrc": "1078:128:4",
															"nodeType": "YulBlock",
															"src": "1078:128:4",
															"statements": [
																{
																	"nativeSrc": "1093:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:4"
																				},
																				"nativeSrc": "1164:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:4"
																		},
																		"nativeSrc": "1132:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:4",
															"nodeType": "YulBlock",
															"src": "1216:129:4",
															"statements": [
																{
																	"nativeSrc": "1231:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:4"
																				},
																				"nativeSrc": "1303:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:4"
																		},
																		"nativeSrc": "1271:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:4",
														"nodeType": "YulTypedName",
														"src": "901:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:4",
														"nodeType": "YulTypedName",
														"src": "912:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:4",
														"nodeType": "YulTypedName",
														"src": "924:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:4",
														"nodeType": "YulTypedName",
														"src": "932:6:4",
														"type": ""
													}
												],
												"src": "845:507:4"
											},
											{
												"body": {
													"nativeSrc": "1423:53:4",
													"nodeType": "YulBlock",
													"src": "1423:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:4"
																		},
																		"nativeSrc": "1445:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:4"
																},
																"nativeSrc": "1433:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:4"
															},
															"nativeSrc": "1433:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:4",
														"nodeType": "YulTypedName",
														"src": "1411:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:4",
														"nodeType": "YulTypedName",
														"src": "1418:3:4",
														"type": ""
													}
												],
												"src": "1358:118:4"
											},
											{
												"body": {
													"nativeSrc": "1580:124:4",
													"nodeType": "YulBlock",
													"src": "1580:124:4",
													"statements": [
														{
															"nativeSrc": "1590:26:4",
															"nodeType": "YulAssignment",
															"src": "1590:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:4"
																},
																"nativeSrc": "1598:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:4"
																		},
																		"nativeSrc": "1679:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:4"
																},
																"nativeSrc": "1626:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:4"
															},
															"nativeSrc": "1626:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:4",
														"nodeType": "YulTypedName",
														"src": "1552:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:4",
														"nodeType": "YulTypedName",
														"src": "1564:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:4",
														"nodeType": "YulTypedName",
														"src": "1575:4:4",
														"type": ""
													}
												],
												"src": "1482:222:4"
											},
											{
												"body": {
													"nativeSrc": "1755:32:4",
													"nodeType": "YulBlock",
													"src": "1755:32:4",
													"statements": [
														{
															"nativeSrc": "1765:16:4",
															"nodeType": "YulAssignment",
															"src": "1765:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1776:5:4",
																"nodeType": "YulIdentifier",
																"src": "1776:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1765:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1765:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1710:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1737:5:4",
														"nodeType": "YulTypedName",
														"src": "1737:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1747:7:4",
														"nodeType": "YulTypedName",
														"src": "1747:7:4",
														"type": ""
													}
												],
												"src": "1710:77:4"
											},
											{
												"body": {
													"nativeSrc": "1836:79:4",
													"nodeType": "YulBlock",
													"src": "1836:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1893:16:4",
																"nodeType": "YulBlock",
																"src": "1893:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1902:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1902:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1905:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1905:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1895:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1895:6:4"
																			},
																			"nativeSrc": "1895:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1895:12:4"
																		},
																		"nativeSrc": "1895:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1895:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1859:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1859:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1884:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1884:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1866:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1866:17:4"
																				},
																				"nativeSrc": "1866:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1866:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1856:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1856:2:4"
																		},
																		"nativeSrc": "1856:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1856:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1849:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1849:6:4"
																},
																"nativeSrc": "1849:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1849:43:4"
															},
															"nativeSrc": "1846:63:4",
															"nodeType": "YulIf",
															"src": "1846:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1793:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1829:5:4",
														"nodeType": "YulTypedName",
														"src": "1829:5:4",
														"type": ""
													}
												],
												"src": "1793:122:4"
											},
											{
												"body": {
													"nativeSrc": "1984:80:4",
													"nodeType": "YulBlock",
													"src": "1984:80:4",
													"statements": [
														{
															"nativeSrc": "1994:22:4",
															"nodeType": "YulAssignment",
															"src": "1994:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2009:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2009:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2003:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2003:5:4"
																},
																"nativeSrc": "2003:13:4",
																"nodeType": "YulFunctionCall",
																"src": "2003:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1994:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1994:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2052:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2052:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2025:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "2025:26:4"
																},
																"nativeSrc": "2025:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2025:33:4"
															},
															"nativeSrc": "2025:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2025:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1921:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1962:6:4",
														"nodeType": "YulTypedName",
														"src": "1962:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1970:3:4",
														"nodeType": "YulTypedName",
														"src": "1970:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1978:5:4",
														"nodeType": "YulTypedName",
														"src": "1978:5:4",
														"type": ""
													}
												],
												"src": "1921:143:4"
											},
											{
												"body": {
													"nativeSrc": "2147:274:4",
													"nodeType": "YulBlock",
													"src": "2147:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2193:83:4",
																"nodeType": "YulBlock",
																"src": "2193:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2195:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2195:77:4"
																			},
																			"nativeSrc": "2195:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2195:79:4"
																		},
																		"nativeSrc": "2195:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2195:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2168:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2168:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2177:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2177:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2164:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2164:3:4"
																		},
																		"nativeSrc": "2164:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2164:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2189:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2189:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2160:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2160:3:4"
																},
																"nativeSrc": "2160:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2160:32:4"
															},
															"nativeSrc": "2157:119:4",
															"nodeType": "YulIf",
															"src": "2157:119:4"
														},
														{
															"nativeSrc": "2286:128:4",
															"nodeType": "YulBlock",
															"src": "2286:128:4",
															"statements": [
																{
																	"nativeSrc": "2301:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2301:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2315:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2315:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2305:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2305:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2330:74:4",
																	"nodeType": "YulAssignment",
																	"src": "2330:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2376:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2376:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2387:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2387:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2372:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:4"
																				},
																				"nativeSrc": "2372:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2372:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2396:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2396:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2340:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "2340:31:4"
																		},
																		"nativeSrc": "2340:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2340:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2330:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2330:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "2070:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2117:9:4",
														"nodeType": "YulTypedName",
														"src": "2117:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2128:7:4",
														"nodeType": "YulTypedName",
														"src": "2128:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2140:6:4",
														"nodeType": "YulTypedName",
														"src": "2140:6:4",
														"type": ""
													}
												],
												"src": "2070:351:4"
											},
											{
												"body": {
													"nativeSrc": "2492:53:4",
													"nodeType": "YulBlock",
													"src": "2492:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2509:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2509:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2532:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2532:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2514:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2514:17:4"
																		},
																		"nativeSrc": "2514:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2514:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2502:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:4"
																},
																"nativeSrc": "2502:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2502:37:4"
															},
															"nativeSrc": "2502:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2502:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2427:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2480:5:4",
														"nodeType": "YulTypedName",
														"src": "2480:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2487:3:4",
														"nodeType": "YulTypedName",
														"src": "2487:3:4",
														"type": ""
													}
												],
												"src": "2427:118:4"
											},
											{
												"body": {
													"nativeSrc": "2677:206:4",
													"nodeType": "YulBlock",
													"src": "2677:206:4",
													"statements": [
														{
															"nativeSrc": "2687:26:4",
															"nodeType": "YulAssignment",
															"src": "2687:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2699:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2699:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2710:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2710:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2695:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:4"
																},
																"nativeSrc": "2695:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2695:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2687:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2687:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2767:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2767:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2780:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2780:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2791:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2791:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2776:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2776:3:4"
																		},
																		"nativeSrc": "2776:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2776:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2723:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2723:43:4"
																},
																"nativeSrc": "2723:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2723:71:4"
															},
															"nativeSrc": "2723:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2723:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2848:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2848:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2861:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2861:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2872:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2872:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2857:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:4"
																		},
																		"nativeSrc": "2857:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2857:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2804:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2804:43:4"
																},
																"nativeSrc": "2804:72:4",
																"nodeType": "YulFunctionCall",
																"src": "2804:72:4"
															},
															"nativeSrc": "2804:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "2804:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2551:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2641:9:4",
														"nodeType": "YulTypedName",
														"src": "2641:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2653:6:4",
														"nodeType": "YulTypedName",
														"src": "2653:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2661:6:4",
														"nodeType": "YulTypedName",
														"src": "2661:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2672:4:4",
														"nodeType": "YulTypedName",
														"src": "2672:4:4",
														"type": ""
													}
												],
												"src": "2551:332:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610b0c380380610b0c8339818101604052810190610031919061044e565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610099919061049b565b60405180910390fd5b6100b18161030860201b60201c565b508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101406103c960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff167fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee4560015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016101f2919061049b565b602060405180830381865afa15801561020d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061023191906104e7565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a0823160025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016102ac919061049b565b602060405180830381865afa1580156102c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102eb91906104e7565b6040516102f9929190610521565b60405180910390a25050610548565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61041d826103f4565b9050919050565b61042d81610413565b8114610437575f80fd5b50565b5f8151905061044881610424565b92915050565b5f8060408385031215610464576104636103f0565b5b5f6104718582860161043a565b92505060206104828582860161043a565b9150509250929050565b61049581610413565b82525050565b5f6020820190506104ae5f83018461048c565b92915050565b5f819050919050565b6104c6816104b4565b81146104d0575f80fd5b50565b5f815190506104e1816104bd565b92915050565b5f602082840312156104fc576104fb6103f0565b5b5f610509848285016104d3565b91505092915050565b61051b816104b4565b82525050565b5f6040820190506105345f830185610512565b6105416020830184610512565b9392505050565b6105b7806105555f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c8063715018a611610059578063715018a6146100eb5780638da5cb5b146100f55780639cd441da14610113578063f2fde38b1461012f5761007b565b80630fc63d101461007f578063156522a81461009d5780635f64b55b146100cd575b5f80fd5b61008761014b565b604051610094919061043d565b60405180910390f35b6100b760048036038101906100b29190610495565b610170565b6040516100c491906104d8565b60405180910390f35b6100d5610185565b6040516100e2919061043d565b60405180910390f35b6100f36101aa565b005b6100fd6101bd565b60405161010a9190610500565b60405180910390f35b61012d60048036038101906101289190610543565b6101e4565b005b61014960048036038101906101449190610495565b6101f0565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052805f5260405f205f915090505481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101b2610274565b6101bb5f6102fb565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101ec610274565b5050565b6101f8610274565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610268575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161025f9190610500565b60405180910390fd5b610271816102fb565b50565b61027c6103bc565b73ffffffffffffffffffffffffffffffffffffffff1661029a6101bd565b73ffffffffffffffffffffffffffffffffffffffff16146102f9576102bd6103bc565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102f09190610500565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6104056104006103fb846103c3565b6103e2565b6103c3565b9050919050565b5f610416826103eb565b9050919050565b5f6104278261040c565b9050919050565b6104378161041d565b82525050565b5f6020820190506104505f83018461042e565b92915050565b5f80fd5b5f610464826103c3565b9050919050565b6104748161045a565b811461047e575f80fd5b50565b5f8135905061048f8161046b565b92915050565b5f602082840312156104aa576104a9610456565b5b5f6104b784828501610481565b91505092915050565b5f819050919050565b6104d2816104c0565b82525050565b5f6020820190506104eb5f8301846104c9565b92915050565b6104fa8161045a565b82525050565b5f6020820190506105135f8301846104f1565b92915050565b610522816104c0565b811461052c575f80fd5b50565b5f8135905061053d81610519565b92915050565b5f806040838503121561055957610558610456565b5b5f6105668582860161052f565b92505060206105778582860161052f565b915050925092905056fea2646970667358221220f6499b82ed7d1f2c320e4d47019607ed64cf25015b98dc18c5c0a3e656940ade64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB0C CODESIZE SUB DUP1 PUSH2 0xB0C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x44E JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x308 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x140 PUSH2 0x3C9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP3 SWAP2 SWAP1 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x548 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x41D DUP3 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42D DUP2 PUSH2 0x413 JUMP JUMPDEST DUP2 EQ PUSH2 0x437 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x448 DUP2 PUSH2 0x424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x464 JUMPI PUSH2 0x463 PUSH2 0x3F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x471 DUP6 DUP3 DUP7 ADD PUSH2 0x43A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x482 DUP6 DUP3 DUP7 ADD PUSH2 0x43A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x495 DUP2 PUSH2 0x413 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4AE PUSH0 DUP4 ADD DUP5 PUSH2 0x48C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C6 DUP2 PUSH2 0x4B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E1 DUP2 PUSH2 0x4BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0x3F0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x509 DUP5 DUP3 DUP6 ADD PUSH2 0x4D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x51B DUP2 PUSH2 0x4B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x534 PUSH0 DUP4 ADD DUP6 PUSH2 0x512 JUMP JUMPDEST PUSH2 0x541 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x512 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5B7 DUP1 PUSH2 0x555 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12F JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x156522A8 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0xCD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH2 0x185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH2 0x1AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFD PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x274 JUMP JUMPDEST PUSH2 0x1BB PUSH0 PUSH2 0x2FB JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1EC PUSH2 0x274 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x274 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x268 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x271 DUP2 PUSH2 0x2FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x27C PUSH2 0x3BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29A PUSH2 0x1BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F9 JUMPI PUSH2 0x2BD PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x405 PUSH2 0x400 PUSH2 0x3FB DUP5 PUSH2 0x3C3 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x416 DUP3 PUSH2 0x3EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x427 DUP3 PUSH2 0x40C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x41D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x450 PUSH0 DUP4 ADD DUP5 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x464 DUP3 PUSH2 0x3C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x474 DUP2 PUSH2 0x45A JUMP JUMPDEST DUP2 EQ PUSH2 0x47E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48F DUP2 PUSH2 0x46B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AA JUMPI PUSH2 0x4A9 PUSH2 0x456 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B7 DUP5 DUP3 DUP6 ADD PUSH2 0x481 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D2 DUP2 PUSH2 0x4C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4EB PUSH0 DUP4 ADD DUP5 PUSH2 0x4C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4FA DUP2 PUSH2 0x45A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x513 PUSH0 DUP4 ADD DUP5 PUSH2 0x4F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x522 DUP2 PUSH2 0x4C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x52C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x53D DUP2 PUSH2 0x519 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x559 JUMPI PUSH2 0x558 PUSH2 0x456 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x566 DUP6 DUP3 DUP7 ADD PUSH2 0x52F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x577 DUP6 DUP3 DUP7 ADD PUSH2 0x52F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 BLOBHASH SWAP12 DUP3 0xED PUSH30 0x1F2C320E4D47019607ED64CF25015B98DC18C5C0A3E656940ADE64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "190:977:3:-:0;;;349:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;220:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;422:7:3;406:6;;:24;;;;;;;;;;;;;;;;;;457:7;441:6;;:24;;;;;;;;;;;;;;;;;;506:7;:5;;;:7;;:::i;:::-;491:93;;;515:6;;;;;;;;;;;:16;;;540:6;;;;;;;;;;;515:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;550:6;;;;;;;;;;;:16;;;575:6;;;;;;;;;;;550:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;491:93;;;;;;;:::i;:::-;;;;;;;;349:243;;190:977;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;1710:77::-;1747:7;1776:5;1765:16;;1710:77;;;:::o;1793:122::-;1866:24;1884:5;1866:24;:::i;:::-;1859:5;1856:35;1846:63;;1905:1;1902;1895:12;1846:63;1793:122;:::o;1921:143::-;1978:5;2009:6;2003:13;1994:22;;2025:33;2052:5;2025:33;:::i;:::-;1921:143;;;;:::o;2070:351::-;2140:6;2189:2;2177:9;2168:7;2164:23;2160:32;2157:119;;;2195:79;;:::i;:::-;2157:119;2315:1;2340:64;2396:7;2387:6;2376:9;2372:22;2340:64;:::i;:::-;2330:74;;2286:128;2070:351;;;;:::o;2427:118::-;2514:24;2532:5;2514:24;:::i;:::-;2509:3;2502:37;2427:118;;:::o;2551:332::-;2672:4;2710:2;2699:9;2695:18;2687:26;;2723:71;2791:1;2780:9;2776:17;2767:6;2723:71;:::i;:::-;2804:72;2872:2;2861:9;2857:18;2848:6;2804:72;:::i;:::-;2551:332;;;;;:::o;190:977:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 628,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": 956,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 763,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_350": {
									"entryPoint": 484,
									"id": 350,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 445,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pool_273": {
									"entryPoint": 368,
									"id": 273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 426,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenA_266": {
									"entryPoint": 331,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenB_269": {
									"entryPoint": 389,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 496,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3626:4",
										"nodeType": "YulBlock",
										"src": "0:3626:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:4",
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nativeSrc": "62:65:4",
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:4",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nativeSrc": "73:54:4",
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nativeSrc": "171:28:4",
													"nodeType": "YulBlock",
													"src": "171:28:4",
													"statements": [
														{
															"nativeSrc": "181:12:4",
															"nodeType": "YulAssignment",
															"src": "181:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:4",
																"nodeType": "YulIdentifier",
																"src": "188:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:4",
														"nodeType": "YulTypedName",
														"src": "157:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:4",
														"nodeType": "YulTypedName",
														"src": "167:3:4",
														"type": ""
													}
												],
												"src": "139:60:4"
											},
											{
												"body": {
													"nativeSrc": "265:82:4",
													"nodeType": "YulBlock",
													"src": "265:82:4",
													"statements": [
														{
															"nativeSrc": "275:66:4",
															"nodeType": "YulAssignment",
															"src": "275:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:4"
																				},
																				"nativeSrc": "315:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:4"
																		},
																		"nativeSrc": "306:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:4"
																},
																"nativeSrc": "288:53:4",
																"nodeType": "YulFunctionCall",
																"src": "288:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:4",
														"nodeType": "YulTypedName",
														"src": "245:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:4",
														"nodeType": "YulTypedName",
														"src": "255:9:4",
														"type": ""
													}
												],
												"src": "205:142:4"
											},
											{
												"body": {
													"nativeSrc": "413:66:4",
													"nodeType": "YulBlock",
													"src": "413:66:4",
													"statements": [
														{
															"nativeSrc": "423:50:4",
															"nodeType": "YulAssignment",
															"src": "423:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:4"
																},
																"nativeSrc": "436:37:4",
																"nodeType": "YulFunctionCall",
																"src": "436:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:4",
														"nodeType": "YulTypedName",
														"src": "393:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:4",
														"nodeType": "YulTypedName",
														"src": "403:9:4",
														"type": ""
													}
												],
												"src": "353:126:4"
											},
											{
												"body": {
													"nativeSrc": "559:66:4",
													"nodeType": "YulBlock",
													"src": "559:66:4",
													"statements": [
														{
															"nativeSrc": "569:50:4",
															"nodeType": "YulAssignment",
															"src": "569:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:4"
																},
																"nativeSrc": "582:37:4",
																"nodeType": "YulFunctionCall",
																"src": "582:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "485:140:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:4",
														"nodeType": "YulTypedName",
														"src": "539:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:4",
														"nodeType": "YulTypedName",
														"src": "549:9:4",
														"type": ""
													}
												],
												"src": "485:140:4"
											},
											{
												"body": {
													"nativeSrc": "710:80:4",
													"nodeType": "YulBlock",
													"src": "710:80:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "732:44:4",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:4"
																		},
																		"nativeSrc": "732:51:4",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:4"
																},
																"nativeSrc": "720:64:4",
																"nodeType": "YulFunctionCall",
																"src": "720:64:4"
															},
															"nativeSrc": "720:64:4",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "631:159:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:4",
														"nodeType": "YulTypedName",
														"src": "698:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:4",
														"nodeType": "YulTypedName",
														"src": "705:3:4",
														"type": ""
													}
												],
												"src": "631:159:4"
											},
											{
												"body": {
													"nativeSrc": "908:138:4",
													"nodeType": "YulBlock",
													"src": "908:138:4",
													"statements": [
														{
															"nativeSrc": "918:26:4",
															"nodeType": "YulAssignment",
															"src": "918:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:4",
																		"nodeType": "YulLiteral",
																		"src": "941:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:4"
																},
																"nativeSrc": "926:18:4",
																"nodeType": "YulFunctionCall",
																"src": "926:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:4"
																		},
																		"nativeSrc": "1021:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "954:57:4",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:4"
																},
																"nativeSrc": "954:85:4",
																"nodeType": "YulFunctionCall",
																"src": "954:85:4"
															},
															"nativeSrc": "954:85:4",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:4",
														"nodeType": "YulTypedName",
														"src": "880:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:4",
														"nodeType": "YulTypedName",
														"src": "892:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:4",
														"nodeType": "YulTypedName",
														"src": "903:4:4",
														"type": ""
													}
												],
												"src": "796:250:4"
											},
											{
												"body": {
													"nativeSrc": "1092:35:4",
													"nodeType": "YulBlock",
													"src": "1092:35:4",
													"statements": [
														{
															"nativeSrc": "1102:19:4",
															"nodeType": "YulAssignment",
															"src": "1102:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1118:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1112:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1112:5:4"
																},
																"nativeSrc": "1112:9:4",
																"nodeType": "YulFunctionCall",
																"src": "1112:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1102:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1052:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1085:6:4",
														"nodeType": "YulTypedName",
														"src": "1085:6:4",
														"type": ""
													}
												],
												"src": "1052:75:4"
											},
											{
												"body": {
													"nativeSrc": "1222:28:4",
													"nodeType": "YulBlock",
													"src": "1222:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1239:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1239:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1232:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1232:6:4"
																},
																"nativeSrc": "1232:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1232:12:4"
															},
															"nativeSrc": "1232:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1232:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1133:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1133:117:4"
											},
											{
												"body": {
													"nativeSrc": "1345:28:4",
													"nodeType": "YulBlock",
													"src": "1345:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1362:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1355:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1355:6:4"
																},
																"nativeSrc": "1355:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1355:12:4"
															},
															"nativeSrc": "1355:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1355:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1256:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1256:117:4"
											},
											{
												"body": {
													"nativeSrc": "1424:51:4",
													"nodeType": "YulBlock",
													"src": "1424:51:4",
													"statements": [
														{
															"nativeSrc": "1434:35:4",
															"nodeType": "YulAssignment",
															"src": "1434:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1463:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1463:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1445:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1445:17:4"
																},
																"nativeSrc": "1445:24:4",
																"nodeType": "YulFunctionCall",
																"src": "1445:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1434:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1434:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1379:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1406:5:4",
														"nodeType": "YulTypedName",
														"src": "1406:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1416:7:4",
														"nodeType": "YulTypedName",
														"src": "1416:7:4",
														"type": ""
													}
												],
												"src": "1379:96:4"
											},
											{
												"body": {
													"nativeSrc": "1524:79:4",
													"nodeType": "YulBlock",
													"src": "1524:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1581:16:4",
																"nodeType": "YulBlock",
																"src": "1581:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1590:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1590:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1593:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1593:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1583:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1583:6:4"
																			},
																			"nativeSrc": "1583:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1583:12:4"
																		},
																		"nativeSrc": "1583:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1583:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1547:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1547:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1572:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1572:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1554:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1554:17:4"
																				},
																				"nativeSrc": "1554:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1554:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1544:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1544:2:4"
																		},
																		"nativeSrc": "1544:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1544:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1537:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:4"
																},
																"nativeSrc": "1537:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1537:43:4"
															},
															"nativeSrc": "1534:63:4",
															"nodeType": "YulIf",
															"src": "1534:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1481:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1517:5:4",
														"nodeType": "YulTypedName",
														"src": "1517:5:4",
														"type": ""
													}
												],
												"src": "1481:122:4"
											},
											{
												"body": {
													"nativeSrc": "1661:87:4",
													"nodeType": "YulBlock",
													"src": "1661:87:4",
													"statements": [
														{
															"nativeSrc": "1671:29:4",
															"nodeType": "YulAssignment",
															"src": "1671:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1693:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1693:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1680:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1680:12:4"
																},
																"nativeSrc": "1680:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1680:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1671:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1671:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1736:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1736:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1709:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1709:26:4"
																},
																"nativeSrc": "1709:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1709:33:4"
															},
															"nativeSrc": "1709:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1709:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1609:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1639:6:4",
														"nodeType": "YulTypedName",
														"src": "1639:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1647:3:4",
														"nodeType": "YulTypedName",
														"src": "1647:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1655:5:4",
														"nodeType": "YulTypedName",
														"src": "1655:5:4",
														"type": ""
													}
												],
												"src": "1609:139:4"
											},
											{
												"body": {
													"nativeSrc": "1820:263:4",
													"nodeType": "YulBlock",
													"src": "1820:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1866:83:4",
																"nodeType": "YulBlock",
																"src": "1866:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1868:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:4"
																			},
																			"nativeSrc": "1868:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:4"
																		},
																		"nativeSrc": "1868:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1841:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1850:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1837:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:4"
																		},
																		"nativeSrc": "1837:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1862:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1833:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:4"
																},
																"nativeSrc": "1833:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1833:32:4"
															},
															"nativeSrc": "1830:119:4",
															"nodeType": "YulIf",
															"src": "1830:119:4"
														},
														{
															"nativeSrc": "1959:117:4",
															"nodeType": "YulBlock",
															"src": "1959:117:4",
															"statements": [
																{
																	"nativeSrc": "1974:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1988:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1978:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2003:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2003:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2038:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2049:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2034:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:4"
																				},
																				"nativeSrc": "2034:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2058:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2013:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:4"
																		},
																		"nativeSrc": "2013:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2003:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1754:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1790:9:4",
														"nodeType": "YulTypedName",
														"src": "1790:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1801:7:4",
														"nodeType": "YulTypedName",
														"src": "1801:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1813:6:4",
														"nodeType": "YulTypedName",
														"src": "1813:6:4",
														"type": ""
													}
												],
												"src": "1754:329:4"
											},
											{
												"body": {
													"nativeSrc": "2134:32:4",
													"nodeType": "YulBlock",
													"src": "2134:32:4",
													"statements": [
														{
															"nativeSrc": "2144:16:4",
															"nodeType": "YulAssignment",
															"src": "2144:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "2155:5:4",
																"nodeType": "YulIdentifier",
																"src": "2155:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2144:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2144:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2089:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2116:5:4",
														"nodeType": "YulTypedName",
														"src": "2116:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2126:7:4",
														"nodeType": "YulTypedName",
														"src": "2126:7:4",
														"type": ""
													}
												],
												"src": "2089:77:4"
											},
											{
												"body": {
													"nativeSrc": "2237:53:4",
													"nodeType": "YulBlock",
													"src": "2237:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2254:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2254:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2277:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2277:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2259:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2259:17:4"
																		},
																		"nativeSrc": "2259:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2259:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2247:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:4"
																},
																"nativeSrc": "2247:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2247:37:4"
															},
															"nativeSrc": "2247:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2247:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2172:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2225:5:4",
														"nodeType": "YulTypedName",
														"src": "2225:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2232:3:4",
														"nodeType": "YulTypedName",
														"src": "2232:3:4",
														"type": ""
													}
												],
												"src": "2172:118:4"
											},
											{
												"body": {
													"nativeSrc": "2394:124:4",
													"nodeType": "YulBlock",
													"src": "2394:124:4",
													"statements": [
														{
															"nativeSrc": "2404:26:4",
															"nodeType": "YulAssignment",
															"src": "2404:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2416:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2416:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2427:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2427:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2412:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2412:3:4"
																},
																"nativeSrc": "2412:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2412:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2404:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2404:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2484:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2484:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2497:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2497:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2508:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2508:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2493:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2493:3:4"
																		},
																		"nativeSrc": "2493:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2493:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2440:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2440:43:4"
																},
																"nativeSrc": "2440:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2440:71:4"
															},
															"nativeSrc": "2440:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2440:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2296:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2366:9:4",
														"nodeType": "YulTypedName",
														"src": "2366:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2378:6:4",
														"nodeType": "YulTypedName",
														"src": "2378:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2389:4:4",
														"nodeType": "YulTypedName",
														"src": "2389:4:4",
														"type": ""
													}
												],
												"src": "2296:222:4"
											},
											{
												"body": {
													"nativeSrc": "2589:53:4",
													"nodeType": "YulBlock",
													"src": "2589:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2606:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2606:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2629:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2629:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2611:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2611:17:4"
																		},
																		"nativeSrc": "2611:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2599:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:4"
																},
																"nativeSrc": "2599:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2599:37:4"
															},
															"nativeSrc": "2599:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2599:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2524:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2577:5:4",
														"nodeType": "YulTypedName",
														"src": "2577:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2584:3:4",
														"nodeType": "YulTypedName",
														"src": "2584:3:4",
														"type": ""
													}
												],
												"src": "2524:118:4"
											},
											{
												"body": {
													"nativeSrc": "2746:124:4",
													"nodeType": "YulBlock",
													"src": "2746:124:4",
													"statements": [
														{
															"nativeSrc": "2756:26:4",
															"nodeType": "YulAssignment",
															"src": "2756:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2768:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2779:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2764:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:4"
																},
																"nativeSrc": "2764:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2764:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2756:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2756:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2836:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2836:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2849:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2849:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2860:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2860:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2845:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2845:3:4"
																		},
																		"nativeSrc": "2845:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2845:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2792:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2792:43:4"
																},
																"nativeSrc": "2792:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2792:71:4"
															},
															"nativeSrc": "2792:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2792:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2648:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2718:9:4",
														"nodeType": "YulTypedName",
														"src": "2718:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2730:6:4",
														"nodeType": "YulTypedName",
														"src": "2730:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2741:4:4",
														"nodeType": "YulTypedName",
														"src": "2741:4:4",
														"type": ""
													}
												],
												"src": "2648:222:4"
											},
											{
												"body": {
													"nativeSrc": "2919:79:4",
													"nodeType": "YulBlock",
													"src": "2919:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2976:16:4",
																"nodeType": "YulBlock",
																"src": "2976:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2985:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2985:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2988:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2988:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2978:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2978:6:4"
																			},
																			"nativeSrc": "2978:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2978:12:4"
																		},
																		"nativeSrc": "2978:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2978:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2942:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2942:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2967:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2967:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2949:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2949:17:4"
																				},
																				"nativeSrc": "2949:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2949:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2939:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2939:2:4"
																		},
																		"nativeSrc": "2939:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2939:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2932:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2932:6:4"
																},
																"nativeSrc": "2932:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2932:43:4"
															},
															"nativeSrc": "2929:63:4",
															"nodeType": "YulIf",
															"src": "2929:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2876:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:4",
														"nodeType": "YulTypedName",
														"src": "2912:5:4",
														"type": ""
													}
												],
												"src": "2876:122:4"
											},
											{
												"body": {
													"nativeSrc": "3056:87:4",
													"nodeType": "YulBlock",
													"src": "3056:87:4",
													"statements": [
														{
															"nativeSrc": "3066:29:4",
															"nodeType": "YulAssignment",
															"src": "3066:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3088:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3088:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3075:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3075:12:4"
																},
																"nativeSrc": "3075:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3075:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3066:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3066:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3131:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3131:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3104:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "3104:26:4"
																},
																"nativeSrc": "3104:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3104:33:4"
															},
															"nativeSrc": "3104:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "3104:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3004:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3034:6:4",
														"nodeType": "YulTypedName",
														"src": "3034:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3042:3:4",
														"nodeType": "YulTypedName",
														"src": "3042:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3050:5:4",
														"nodeType": "YulTypedName",
														"src": "3050:5:4",
														"type": ""
													}
												],
												"src": "3004:139:4"
											},
											{
												"body": {
													"nativeSrc": "3232:391:4",
													"nodeType": "YulBlock",
													"src": "3232:391:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3278:83:4",
																"nodeType": "YulBlock",
																"src": "3278:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3280:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3280:77:4"
																			},
																			"nativeSrc": "3280:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3280:79:4"
																		},
																		"nativeSrc": "3280:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3280:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3253:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3253:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3262:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3262:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3249:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3249:3:4"
																		},
																		"nativeSrc": "3249:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3249:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3274:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3274:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3245:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3245:3:4"
																},
																"nativeSrc": "3245:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3245:32:4"
															},
															"nativeSrc": "3242:119:4",
															"nodeType": "YulIf",
															"src": "3242:119:4"
														},
														{
															"nativeSrc": "3371:117:4",
															"nodeType": "YulBlock",
															"src": "3371:117:4",
															"statements": [
																{
																	"nativeSrc": "3386:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3386:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3400:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3400:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3390:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3390:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3415:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3415:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3450:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3450:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3461:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3461:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3446:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3446:3:4"
																				},
																				"nativeSrc": "3446:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3446:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3470:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3470:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3425:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3425:20:4"
																		},
																		"nativeSrc": "3425:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3425:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3415:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3415:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3498:118:4",
															"nodeType": "YulBlock",
															"src": "3498:118:4",
															"statements": [
																{
																	"nativeSrc": "3513:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3513:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3527:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3527:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3517:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3517:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3543:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3543:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3578:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3578:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3589:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3589:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3574:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3574:3:4"
																				},
																				"nativeSrc": "3574:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3574:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3598:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3598:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3553:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3553:20:4"
																		},
																		"nativeSrc": "3553:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3553:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3543:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3543:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3149:474:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3194:9:4",
														"nodeType": "YulTypedName",
														"src": "3194:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3205:7:4",
														"nodeType": "YulTypedName",
														"src": "3205:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3217:6:4",
														"nodeType": "YulTypedName",
														"src": "3217:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3225:6:4",
														"nodeType": "YulTypedName",
														"src": "3225:6:4",
														"type": ""
													}
												],
												"src": "3149:474:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c8063715018a611610059578063715018a6146100eb5780638da5cb5b146100f55780639cd441da14610113578063f2fde38b1461012f5761007b565b80630fc63d101461007f578063156522a81461009d5780635f64b55b146100cd575b5f80fd5b61008761014b565b604051610094919061043d565b60405180910390f35b6100b760048036038101906100b29190610495565b610170565b6040516100c491906104d8565b60405180910390f35b6100d5610185565b6040516100e2919061043d565b60405180910390f35b6100f36101aa565b005b6100fd6101bd565b60405161010a9190610500565b60405180910390f35b61012d60048036038101906101289190610543565b6101e4565b005b61014960048036038101906101449190610495565b6101f0565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052805f5260405f205f915090505481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101b2610274565b6101bb5f6102fb565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101ec610274565b5050565b6101f8610274565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610268575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161025f9190610500565b60405180910390fd5b610271816102fb565b50565b61027c6103bc565b73ffffffffffffffffffffffffffffffffffffffff1661029a6101bd565b73ffffffffffffffffffffffffffffffffffffffff16146102f9576102bd6103bc565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102f09190610500565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6104056104006103fb846103c3565b6103e2565b6103c3565b9050919050565b5f610416826103eb565b9050919050565b5f6104278261040c565b9050919050565b6104378161041d565b82525050565b5f6020820190506104505f83018461042e565b92915050565b5f80fd5b5f610464826103c3565b9050919050565b6104748161045a565b811461047e575f80fd5b50565b5f8135905061048f8161046b565b92915050565b5f602082840312156104aa576104a9610456565b5b5f6104b784828501610481565b91505092915050565b5f819050919050565b6104d2816104c0565b82525050565b5f6020820190506104eb5f8301846104c9565b92915050565b6104fa8161045a565b82525050565b5f6020820190506105135f8301846104f1565b92915050565b610522816104c0565b811461052c575f80fd5b50565b5f8135905061053d81610519565b92915050565b5f806040838503121561055957610558610456565b5b5f6105668582860161052f565b92505060206105778582860161052f565b915050925092905056fea2646970667358221220f6499b82ed7d1f2c320e4d47019607ed64cf25015b98dc18c5c0a3e656940ade64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12F JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x156522A8 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0xCD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH2 0x185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH2 0x1AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFD PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x274 JUMP JUMPDEST PUSH2 0x1BB PUSH0 PUSH2 0x2FB JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1EC PUSH2 0x274 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x274 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x268 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x271 DUP2 PUSH2 0x2FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x27C PUSH2 0x3BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29A PUSH2 0x1BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F9 JUMPI PUSH2 0x2BD PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x405 PUSH2 0x400 PUSH2 0x3FB DUP5 PUSH2 0x3C3 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x416 DUP3 PUSH2 0x3EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x427 DUP3 PUSH2 0x40C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x41D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x450 PUSH0 DUP4 ADD DUP5 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x464 DUP3 PUSH2 0x3C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x474 DUP2 PUSH2 0x45A JUMP JUMPDEST DUP2 EQ PUSH2 0x47E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48F DUP2 PUSH2 0x46B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AA JUMPI PUSH2 0x4A9 PUSH2 0x456 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B7 DUP5 DUP3 DUP6 ADD PUSH2 0x481 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D2 DUP2 PUSH2 0x4C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4EB PUSH0 DUP4 ADD DUP5 PUSH2 0x4C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4FA DUP2 PUSH2 0x45A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x513 PUSH0 DUP4 ADD DUP5 PUSH2 0x4F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x522 DUP2 PUSH2 0x4C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x52C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x53D DUP2 PUSH2 0x519 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x559 JUMPI PUSH2 0x558 PUSH2 0x456 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x566 DUP6 DUP3 DUP7 ADD PUSH2 0x52F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x577 DUP6 DUP3 DUP7 ADD PUSH2 0x52F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 BLOBHASH SWAP12 DUP3 0xED PUSH30 0x1F2C320E4D47019607ED64CF25015B98DC18C5C0A3E656940ADE64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "190:977:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;239:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;295:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;266:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;912:81:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;239:20:3;;;;;;;;;;;;;:::o;295:45::-;;;;;;;;;;;;;;;;;:::o;266:20::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;912:81:3:-;1531:13:0;:11;:13::i;:::-;912:81:3;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1133:117::-;1242:1;1239;1232:12;1379:96;1416:7;1445:24;1463:5;1445:24;:::i;:::-;1434:35;;1379:96;;;:::o;1481:122::-;1554:24;1572:5;1554:24;:::i;:::-;1547:5;1544:35;1534:63;;1593:1;1590;1583:12;1534:63;1481:122;:::o;1609:139::-;1655:5;1693:6;1680:20;1671:29;;1709:33;1736:5;1709:33;:::i;:::-;1609:139;;;;:::o;1754:329::-;1813:6;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;1754:329;;;;:::o;2089:77::-;2126:7;2155:5;2144:16;;2089:77;;;:::o;2172:118::-;2259:24;2277:5;2259:24;:::i;:::-;2254:3;2247:37;2172:118;;:::o;2296:222::-;2389:4;2427:2;2416:9;2412:18;2404:26;;2440:71;2508:1;2497:9;2493:17;2484:6;2440:71;:::i;:::-;2296:222;;;;:::o;2524:118::-;2611:24;2629:5;2611:24;:::i;:::-;2606:3;2599:37;2524:118;;:::o;2648:222::-;2741:4;2779:2;2768:9;2764:18;2756:26;;2792:71;2860:1;2849:9;2845:17;2836:6;2792:71;:::i;:::-;2648:222;;;;:::o;2876:122::-;2949:24;2967:5;2949:24;:::i;:::-;2942:5;2939:35;2929:63;;2988:1;2985;2978:12;2929:63;2876:122;:::o;3004:139::-;3050:5;3088:6;3075:20;3066:29;;3104:33;3131:5;3104:33;:::i;:::-;3004:139;;;;:::o;3149:474::-;3217:6;3225;3274:2;3262:9;3253:7;3249:23;3245:32;3242:119;;;3280:79;;:::i;:::-;3242:119;3400:1;3425:53;3470:7;3461:6;3450:9;3446:22;3425:53;:::i;:::-;3415:63;;3371:117;3527:2;3553:53;3598:7;3589:6;3578:9;3574:22;3553:53;:::i;:::-;3543:63;;3498:118;3149:474;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "292600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"owner()": "2537",
								"pool(address)": "2825",
								"renounceOwnership()": "infinite",
								"tokenA()": "infinite",
								"tokenB()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 190,
									"end": 1167,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 592,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 592,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 592,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 592,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 592,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 349,
									"end": 592,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 349,
									"end": 592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 349,
									"end": 592,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 220,
									"end": 230,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 422,
									"end": 429,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 412,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 406,
									"end": 412,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 430,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 406,
									"end": 430,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 430,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 430,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 406,
									"end": 430,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 457,
									"end": 464,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 441,
									"end": 447,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 441,
									"end": 447,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 441,
									"end": 465,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 441,
									"end": 465,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 506,
									"end": 513,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 506,
									"end": 511,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 506,
									"end": 511,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 506,
									"end": 511,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 506,
									"end": 513,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 506,
									"end": 513,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 506,
									"end": 513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 506,
									"end": 513,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 506,
									"end": 513,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 491,
									"end": 584,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "PUSH",
									"source": 3,
									"value": "AC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45"
								},
								{
									"begin": 515,
									"end": 521,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 515,
									"end": 521,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 521,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 521,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 515,
									"end": 521,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 521,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 515,
									"end": 521,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 515,
									"end": 521,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 521,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 515,
									"end": 521,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 515,
									"end": 521,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 515,
									"end": 531,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 515,
									"end": 531,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 515,
									"end": 531,
									"name": "PUSH",
									"source": 3,
									"value": "70A08231"
								},
								{
									"begin": 540,
									"end": 546,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 540,
									"end": 546,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 546,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 540,
									"end": 546,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 540,
									"end": 546,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 540,
									"end": 546,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 540,
									"end": 546,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 540,
									"end": 546,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 540,
									"end": 546,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 540,
									"end": 546,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 540,
									"end": 546,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 515,
									"end": 548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "STATICCALL",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 515,
									"end": 548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 515,
									"end": 548,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 515,
									"end": 548,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 550,
									"end": 556,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 550,
									"end": 556,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 550,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 550,
									"end": 556,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 550,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 550,
									"end": 556,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 550,
									"end": 556,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 550,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 550,
									"end": 556,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 550,
									"end": 556,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 550,
									"end": 556,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 550,
									"end": 566,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 550,
									"end": 566,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 550,
									"end": 566,
									"name": "PUSH",
									"source": 3,
									"value": "70A08231"
								},
								{
									"begin": 575,
									"end": 581,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 575,
									"end": 581,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 575,
									"end": 581,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 575,
									"end": 581,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 575,
									"end": 581,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 575,
									"end": 581,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 575,
									"end": 581,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 575,
									"end": 581,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 575,
									"end": 581,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 575,
									"end": 581,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 575,
									"end": 581,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 550,
									"end": 583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "STATICCALL",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 550,
									"end": 583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 550,
									"end": 583,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 583,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 491,
									"end": 584,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 491,
									"end": 584,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 491,
									"end": 584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 491,
									"end": 584,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 491,
									"end": 584,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 491,
									"end": 584,
									"name": "LOG2",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 349,
									"end": 592,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1684,
									"end": 1691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1703,
									"end": 1716,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1787,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1710,
									"end": 1787,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1747,
									"end": 1754,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1776,
									"end": 1781,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1765,
									"end": 1781,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1765,
									"end": 1781,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1787,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1787,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1787,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1787,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1793,
									"end": 1915,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1793,
									"end": 1915,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1866,
									"end": 1890,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1884,
									"end": 1889,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1866,
									"end": 1890,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1866,
									"end": 1890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1866,
									"end": 1890,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1866,
									"end": 1890,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1859,
									"end": 1864,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1856,
									"end": 1891,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1846,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 1846,
									"end": 1909,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1902,
									"end": 1903,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1895,
									"end": 1907,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1846,
									"end": 1909,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 1846,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1793,
									"end": 1915,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1793,
									"end": 1915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1921,
									"end": 2064,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1921,
									"end": 2064,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1978,
									"end": 1983,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2015,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2003,
									"end": 2016,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1994,
									"end": 2016,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1994,
									"end": 2016,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 2052,
									"end": 2057,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 2025,
									"end": 2058,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2058,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 2025,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1921,
									"end": 2064,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1921,
									"end": 2064,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1921,
									"end": 2064,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1921,
									"end": 2064,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1921,
									"end": 2064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2070,
									"end": 2421,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2070,
									"end": 2421,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2140,
									"end": 2146,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2189,
									"end": 2191,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2177,
									"end": 2186,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2168,
									"end": 2175,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2164,
									"end": 2187,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2160,
									"end": 2192,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 2157,
									"end": 2276,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2157,
									"end": 2276,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2157,
									"end": 2276,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2195,
									"end": 2274,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2195,
									"end": 2274,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 2195,
									"end": 2274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2195,
									"end": 2274,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2195,
									"end": 2274,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2157,
									"end": 2276,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2157,
									"end": 2276,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2315,
									"end": 2316,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2340,
									"end": 2404,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2396,
									"end": 2403,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2387,
									"end": 2393,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2376,
									"end": 2385,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2372,
									"end": 2394,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2340,
									"end": 2404,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 2340,
									"end": 2404,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2340,
									"end": 2404,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2340,
									"end": 2404,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2330,
									"end": 2404,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2330,
									"end": 2404,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2286,
									"end": 2414,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2070,
									"end": 2421,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2070,
									"end": 2421,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2070,
									"end": 2421,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2070,
									"end": 2421,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2070,
									"end": 2421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2427,
									"end": 2545,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2427,
									"end": 2545,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2514,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2532,
									"end": 2537,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2514,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 2514,
									"end": 2538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2514,
									"end": 2538,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2514,
									"end": 2538,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2509,
									"end": 2512,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2502,
									"end": 2539,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2427,
									"end": 2545,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2427,
									"end": 2545,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2427,
									"end": 2545,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2551,
									"end": 2883,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 2551,
									"end": 2883,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2672,
									"end": 2676,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2710,
									"end": 2712,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2699,
									"end": 2708,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2695,
									"end": 2713,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 2713,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 2713,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2723,
									"end": 2794,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 2791,
									"end": 2792,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2789,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2776,
									"end": 2793,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2767,
									"end": 2773,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2723,
									"end": 2794,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2723,
									"end": 2794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2723,
									"end": 2794,
									"name": "tag",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 2723,
									"end": 2794,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2804,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2872,
									"end": 2874,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2861,
									"end": 2870,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2857,
									"end": 2875,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2848,
									"end": 2854,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2804,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2804,
									"end": 2876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2804,
									"end": 2876,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2804,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2551,
									"end": 2883,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2551,
									"end": 2883,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2551,
									"end": 2883,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2551,
									"end": 2883,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2551,
									"end": 2883,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2551,
									"end": 2883,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 190,
									"end": 1167,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f6499b82ed7d1f2c320e4d47019607ed64cf25015b98dc18c5c0a3e656940ade64736f6c634300081a0033",
									".code": [
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "9CD441DA"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "FC63D10"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "156522A8"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "5F64B55B"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 190,
											"end": 1167,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 239,
											"end": 259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 239,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 239,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 239,
											"end": 259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 239,
											"end": 259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 239,
											"end": 259,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 239,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 239,
											"end": 259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 239,
											"end": 259,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 295,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 295,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 266,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 912,
											"end": 993,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 912,
											"end": 993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 912,
											"end": 993,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 912,
											"end": 993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 912,
											"end": 993,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 912,
											"end": 993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 912,
											"end": 993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 912,
											"end": 993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 912,
											"end": 993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 239,
											"end": 259,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 239,
											"end": 259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 239,
											"end": 259,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 239,
											"end": 259,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 239,
											"end": 259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 266,
											"end": 286,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 266,
											"end": 286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 993,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 912,
											"end": 993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 912,
											"end": 993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1463,
											"end": 1468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1445,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1603,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1481,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1572,
											"end": 1577,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1554,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 1552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1579,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1534,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1534,
											"end": 1597,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1595,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1534,
											"end": 1597,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1534,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1736,
											"end": 1741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1709,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 2083,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1754,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1868,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2013,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 2083,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 2083,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 2083,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 2083,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 2083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2166,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2089,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2160,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2290,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2172,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2277,
											"end": 2282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2259,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2283,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2259,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2284,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2518,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2296,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2393,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2429,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2412,
											"end": 2430,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2508,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2506,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2440,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2511,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2440,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2518,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2745,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2845,
											"end": 2862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2792,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2967,
											"end": 2972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2949,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2942,
											"end": 2947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2974,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3131,
											"end": 3136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3104,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3623,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3149,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 3223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3231,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3274,
											"end": 3276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3260,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3277,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3280,
											"end": 3359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3280,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3242,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3470,
											"end": 3477,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3461,
											"end": 3467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3425,
											"end": 3478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3425,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3478,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3478,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3589,
											"end": 3595,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3587,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3574,
											"end": 3596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3553,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3553,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3623,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3623,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3623,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Tp_Final_Mod03/SimpleDEX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"owner()": "8da5cb5b",
							"pool(address)": "156522a8",
							"renounceOwnership()": "715018a6",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tp_Final_Mod03/SimpleDEX.sol\":\"SimpleDEX\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Tp_Final_Mod03/SimpleDEX.sol\":{\"keccak256\":\"0xcac2fc46adf5696e17e828c9dc4055dffab62844843e1e28aec0961c1bb63842\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ea0209adc3443aab15534c32be8b44a74bfd3e474b359c4cfd8986941bbf3163\",\"dweb:/ipfs/QmYg92ekfiw5XcGAip21B21hnb2ut2R48AUNAiXwuZJCSu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Tp_Final_Mod03/SimpleDEX.sol:SimpleDEX",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 266,
								"contract": "contracts/Tp_Final_Mod03/SimpleDEX.sol:SimpleDEX",
								"label": "tokenA",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 269,
								"contract": "contracts/Tp_Final_Mod03/SimpleDEX.sol:SimpleDEX",
								"label": "tokenB",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 273,
								"contract": "contracts/Tp_Final_Mod03/SimpleDEX.sol:SimpleDEX",
								"label": "pool",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"contracts/Tp_Final_Mod03/SimpleDEX.sol": {
				"ast": {
					"absolutePath": "contracts/Tp_Final_Mod03/SimpleDEX.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						],
						"SimpleDEX": [
							351
						]
					},
					"id": 352,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:33:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 352,
							"sourceUnit": 226,
							"src": "76:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 352,
							"sourceUnit": 148,
							"src": "134:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 261,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "220:3:3",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 262,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "224:6:3",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "220:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 260,
										"name": "Ownable",
										"nameLocations": [
											"212:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "212:7:3"
									},
									"id": 263,
									"nodeType": "InheritanceSpecifier",
									"src": "212:19:3"
								}
							],
							"canonicalName": "SimpleDEX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 351,
							"linearizedBaseContracts": [
								351,
								147,
								255
							],
							"name": "SimpleDEX",
							"nameLocation": "199:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 266,
									"mutability": "mutable",
									"name": "tokenA",
									"nameLocation": "253:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 351,
									"src": "239:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 265,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 264,
											"name": "IERC20",
											"nameLocations": [
												"239:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "239:6:3"
										},
										"referencedDeclaration": 225,
										"src": "239:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f64b55b",
									"id": 269,
									"mutability": "mutable",
									"name": "tokenB",
									"nameLocation": "280:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 351,
									"src": "266:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 268,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 267,
											"name": "IERC20",
											"nameLocations": [
												"266:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "266:6:3"
										},
										"referencedDeclaration": 225,
										"src": "266:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "156522a8",
									"id": 273,
									"mutability": "mutable",
									"name": "pool",
									"nameLocation": "336:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 351,
									"src": "295:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 272,
										"keyName": "token",
										"keyNameLocation": "311:5:3",
										"keyType": {
											"id": 270,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "303:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "295:33:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 271,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "320:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "395:197:3",
										"statements": [
											{
												"expression": {
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 280,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "406:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 282,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "422:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 281,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "415:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "415:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "406:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "406:24:3"
											},
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 286,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "441:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 288,
																"name": "_tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "457:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 287,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "450:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "450:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "441:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "441:24:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 293,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "506:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "506:7:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 299,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 266,
																			"src": "540:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "532:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 297,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "532:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "532:15:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 295,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "515:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "522:9:3",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 182,
																"src": "515:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "515:33:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 306,
																			"name": "tokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 269,
																			"src": "575:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "567:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 304,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "567:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "567:15:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 302,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "550:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "557:9:3",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 182,
																"src": "550:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "550:33:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 292,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "491:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:93:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "EmitStatement",
												"src": "486:98:3"
											}
										]
									},
									"id": 312,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "369:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "361:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "386:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "378:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:34:3"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:0:3"
									},
									"scope": 351,
									"src": "349:243:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45",
									"id": 320,
									"name": "LiquidityAdded",
									"nameLocation": "606:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "637:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "621:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "655:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "647:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "672:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:60:3"
									},
									"src": "600:81:3"
								},
								{
									"anonymous": false,
									"eventSelector": "96cd817c6329656790ef8fba7675405193677d39619571282f5e21f3a98cd059",
									"id": 328,
									"name": "LiquidityRemoved",
									"nameLocation": "693:16:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "726:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "710:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "761:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "753:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:60:3"
									},
									"src": "687:83:3"
								},
								{
									"anonymous": false,
									"eventSelector": "692315744755ee6d80decaeb993d4b1bb95ff5db042cc47b32d5a7d858b01902",
									"id": 340,
									"name": "Swapped",
									"nameLocation": "782:7:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "trader",
												"nameLocation": "806:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "790:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "830:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "814:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "847:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "839:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "857:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "891:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "883:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:112:3"
									},
									"src": "776:126:3"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "985:8:3",
										"statements": []
									},
									"functionSelector": "9cd441da",
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 347,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 346,
												"name": "onlyOwner",
												"nameLocations": [
													"975:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "975:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "975:9:3"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "921:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "942:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "934:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "959:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "951:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "933:34:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:0:3"
									},
									"scope": 351,
									"src": "912:81:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 352,
							"src": "190:977:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								320,
								328,
								340
							]
						}
					],
					"src": "39:1128:3"
				},
				"id": 3
			}
		}
	}
}