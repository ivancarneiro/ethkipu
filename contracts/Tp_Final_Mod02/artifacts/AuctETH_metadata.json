{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_initValue",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_bidIncrement",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_duration",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "bidder",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "bidValue",
						"type": "uint256"
					}
				],
				"name": "NewBid",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "highestBid",
						"type": "uint256"
					}
				],
				"name": "Winner",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "bidIncrement",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "bidderAddresses",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "bidders",
				"outputs": [
					{
						"internalType": "address",
						"name": "addrs",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lastBid",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "duration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "finishTimestamp",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getWinner",
				"outputs": [
					{
						"internalType": "address",
						"name": "winnerAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "winningBid",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "highestBid",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "incrementalPercentage",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "initValue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "makeBid",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "returnsBids",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "showBids",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "bidder",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							}
						],
						"internalType": "struct AuctETH.Bid[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "showhighestBid",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "winner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withDraw",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Ivan Carneiro",
			"details": "Implements features like bid increments, automatic extensions, and refunds with commission",
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_bidIncrement": "The minimum bid increment (in percentage).",
						"_duration": "The duration of the auction (in seconds).",
						"_initValue": "The initial value of the auction item."
					}
				},
				"getWinner()": {
					"details": "This function can be called after the auction has ended.",
					"returns": {
						"winnerAddress": "The winner's Ethereum address.",
						"winningBid": "The winning bid amount."
					}
				},
				"incrementalPercentage()": {
					"returns": {
						"_0": "uint256."
					}
				},
				"makeBid()": {
					"details": "Requires bid value to exceed current bid by minimum increment."
				},
				"returnsBids()": {
					"details": "Only the auction owner can call this function."
				},
				"showBids()": {
					"returns": {
						"_0": "array."
					}
				},
				"showhighestBid()": {
					"returns": {
						"_0": "uint256."
					}
				},
				"withDraw()": {
					"details": "Only the balance owner can call this function."
				}
			},
			"title": "AuctETH - A smart contract for Ethereum-based auctions",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Constructor to initialize the auction."
				},
				"getWinner()": {
					"notice": "Returns the winner's address and winning bid."
				},
				"incrementalPercentage()": {
					"notice": "Returns the minimum bid increment percentage."
				},
				"makeBid()": {
					"notice": "Places a new bid."
				},
				"returnsBids()": {
					"notice": "Returns bids and refunds deposits to non-winning bidders, transfers the winning bid to the winner."
				},
				"showBids()": {
					"notice": "Returns an array of all bids."
				},
				"showhighestBid()": {
					"notice": "Returns the highest bid value."
				},
				"withDraw()": {
					"notice": "Allows a bidder to partially refund their balance."
				}
			},
			"notice": "This contract allows users to participate in a timed auction",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Tp_Final_Mod02/AuctETH.sol": "AuctETH"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Tp_Final_Mod02/AuctETH.sol": {
			"keccak256": "0x82cfcf184b482a2be5154ccaadacf9867897a27376aed65d1d6564815c2cd2ce",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://697e4603d215f87f4fee54ba8e7e47fa2a0917b62e7c238a9b876dee6a4d3959",
				"dweb:/ipfs/QmPHKQ5jq46zk3mtARgsWJih16EJaJXSQtnUsJePfcBFGf"
			]
		}
	},
	"version": 1
}